//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution
{
public:
	public:
		int find_median(vector<int> v)
		{
		    // Code here.
		   int n=v.size();
		  // If size of the arr[] is even 
           if (n % 2 == 0) { 
  
             // Applying nth_element on n/2th index 
            nth_element(v.begin(), v.begin() + n / 2, v.end());
            
             // Applying nth_element on (n-1)/2 th index 
            nth_element(v.begin(), v.begin() + (n - 1) / 2, v.end()); 
  
            // Find the average of value at index N/2 and (N-1)/2 
            return (int)(v[(n - 1) / 2] + v[n / 2]) / 2.0; 
           } 
  
             // If size of the arr[] is odd 
            else { 
  
            // Applying nth_element on n/2 
            nth_element(v.begin(), v.begin() + n / 2, v.end());
            
            // Value at index (N/2)th is the median 
            return (int)v[n / 2]; 
    } 
} 
  
		
};

//{ Driver Code Starts.
int main(){
    int T;
    cin >> T;
    while(T--)
    {
    	int n; 
    	cin >> n;
    	vector<int> v(n);
    	for(int i = 0; i < n; i++)
    		cin>>v[i];
    	Solution ob;
    	int ans = ob.find_median(v);
    	cout << ans <<"\n";
    }
	return 0;
}

// } Driver Code Ends
